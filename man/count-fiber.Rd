% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_fiber.R
\name{count-fiber}
\alias{count-fiber}
\alias{count_fiber}
\alias{countFiber}
\title{Count the elements of a fiber Ax = b}
\usage{
count_fiber(A, b, dir = tempdir(), quiet = TRUE, cache = TRUE, ...)

countFiber(...)
}
\arguments{
\item{A}{the A matrix of Ax = b}

\item{b}{the b vector of Ax = b}

\item{dir}{directory to place the files in, without an ending /}

\item{quiet}{show latte output}

\item{cache}{use count (default) or fcount}

\item{...}{additional arguments to \code{\link{latte_count}}}
}
\value{
an integer
}
\description{
Count the elements of a fiber Ax = b
}
\details{
\code{count_fiber} uses LattE's count function (via algstat's
\code{\link{latte_count}} function) to count the fiber  In many cases, the
number of such tables is enormous.  In these cases, instead of giving back an
integer \code{count_fiber} provides a character string with the integer in
it; see examples.
}
\examples{

\dontrun{ requires LattE

data(politics); politics

(A <- hmat(c(2,2), list(1, 2)))
count_tables(politics, A)
b <- A \%*\% tab2vec(politics)
count_fiber(A, b)


# this counts the number of ways 10 non-negative integers can sum to 100
A <- ones(1, 10)
count_fiber(A, 100, cache = FALSE)
system.time(count_fiber(A, 100, cache = FALSE))
system.time(count_fiber(A, 100))
system.time(count_fiber(A, 100))


}


}
\seealso{
\code{\link{latte_count}}
}
